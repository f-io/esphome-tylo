logger:
  level: ${log_level}
  baud_rate: 0

api:
  encryption:
    key: ${api_encryption_key}

ota:
  - platform: esphome
    password: ${ota_password}

wifi:
  ssid: ${wifi_ssid_sub}
  password: ${wifi_password_sub}

uart:
  tx_pin: ${uart_tx_pin}
  rx_pin: ${uart_rx_pin}
  baud_rate: 19200
  data_bits: 8
  parity: EVEN
  stop_bits: 1

sauna360:
  id: sauna360_component
  model: ${model_name}

binary_sensor:
  - platform: sauna360
    heater_status:
      name: "Heater State"

  - platform: sauna360
    light_status:
      name: "Light State"

  - platform: sauna360
    ready_status:
      name: "Ready State"

sensor:
  - platform: uptime
    id: esp_uptime_seconds
    internal: true
    update_interval: 1s

  - platform: wifi_signal
    name: "${device_name} WiFi Signal"
    update_interval: 60s
    icon: "mdi:wifi"

  - platform: sauna360
    id: current_temperature_sensor
    current_temperature:
      name: "Current Temperature"

  - platform: sauna360
    setting_temperature:
      name: "Setting Temperature"

  - platform: sauna360
    remaining_time:
      name: "Remaining Time"

  - platform: sauna360
    setting_bath_time:
      name: "Setting Bath Time"

  - platform: sauna360
    total_uptime:
      name: "Total Uptime"

  - platform: sauna360
    max_bath_temperature:
      name: "Max Bath Temperature"

  - platform: sauna360
    overheating_pcb_limit:
      name: "Overheating PCB Limit"

  - platform: sauna360
    session_uptime:
      name: "Heater Session Uptime"

number:
  - platform: sauna360
    bath_temperature:
      name: "Bath Temperature"
      id: bath_temperature
      mode: box
      bath_temperature_default: ${default_bath_temperature}

  - platform: sauna360
    bath_time:
      name: "Bath Time"
      mode: box
      bath_time_default: ${default_bath_time}

  - platform: sauna360
    max_bath_temperature:
      name: "Max Bath Temperature"
      mode: box
      max_bath_temperature_default: ${default_max_bath_temperature}

switch:
  - platform: sauna360
    light_relay:
      name: "Light"
  - platform: sauna360
    heater_relay:
      name: "Heater"
      id: heater_relay_switch

text_sensor:
  - platform: sauna360
    heater_state:
      name: "Heating Element"

  - platform: template
    name: "${device_name} ESP Uptime"
    id: esp_uptime_flex
    entity_category: diagnostic
    update_interval: 1s
    icon: "mdi:counter"
    lambda: |-
      const uint32_t s = (uint32_t) id(esp_uptime_seconds).state;

      static uint32_t last_pub_s = 0;
      const bool just_booted = (s == 0 && last_pub_s == 0);
      bool should_publish = false;

      if (s < 60) {
        // 0â€“59 Sec.
        should_publish = (s != last_pub_s) || just_booted;
      } else {
        // > 60 Sec
        should_publish = (s % 60 == 0) && (s != last_pub_s);
      }
      if (!should_publish) return {};

      last_pub_s = s;

      char buf[24];
      if (s < 60) {
        // "SS Sec."
        snprintf(buf, sizeof(buf), "%u Sec.", (unsigned) s);
      } else {
        // "MM Min."
        const unsigned m = s / 60U;
        snprintf(buf, sizeof(buf), "%u Min.", m);
      }
      return {buf};

time:
  - platform: homeassistant

climate:
  - platform: sauna360
    id: sauna_climate
    name: "Sauna Climate"
    sauna360_id: sauna360_component
    bath_temperature_number_id: bath_temperature
    heater_relay_id: heater_relay_switch
    visual:
      min_temperature: ${min_temp_c}
      max_temperature: ${max_temp_c}
      temperature_step: 1.0
